/* Ensure the project container spans the full width of the screen */
.project-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100vw;
  /* Full viewport width */
  height: 100vh;
  /* Full viewport height */
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  background-color: #f5f5f5;
  /* Optional background color */
  overflow-y: auto; /* Ensure the project container is scrollable */
}

/* Ensure content within the container adjusts responsively */
.project-container h1,
.project-container button,
.project-container input {
  max-width: 100%;
  /* Ensure elements don't overflow */
  margin: 10px 0;
  /* Add some spacing between elements */
  text-align: center;
}

/* Style for the output and error areas */
#output,
#error {
  width: 90%;
  /* Take most of the screen width */
  max-width: 800px;
  /* Optional max width */
  overflow-wrap: break-word;
  /* Prevent long text from overflowing */
  margin: 10px auto;
}

.blackText{
  color:black;
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.projectTitle {
  margin-right: 1rem;
}

.refreshButton {
  padding: 0.5rem 1rem;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.refreshButton:hover {
  background-color: #0056b3;
}

.renderOptionsSection {
  width: 100%; /* Make it take up the full width */
  max-width: 90%; /* Remove the max-width constraint */
  margin: 0 auto; /* Center the box horizontally */
  margin-top: 20px;
  padding: 20px; /* Ensure padding is visible on all sides */
  background-color: #f9f9f9;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
}

.renderOptionsTitle {
  font-size: 1.5rem;
  color: black; /* Ensure text is black */
  margin: 0; /* Remove extra margins */
  line-height: 3rem; /* Align text vertically within the header */
}

.renderOptionsHeader {
  display: flex;
  justify-content: space-between;
  align-items: center; /* Vertically center items */
  height: 3rem; /* Ensure consistent height for alignment */
}

.renderOptionsSeparator {
  border: none;
  border-top: 1px solid #ddd;
  margin: 0 0 1rem 0;
}

/* Adjust grid for better responsiveness */
.renderOptionsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 20px;
}

.renderOptionGroup {
  display: flex;
  flex-direction: column;
  gap: 10px;
  min-width: 0; /* Prevents flex items from overflowing */
  align-items: flex-start; /* Align items consistently */
}

.renderOptionLabel {
  font-weight: bold;
  font-size: 14px;
  color: black; /* Ensure text is black */
}

/* Make inputs more responsive */
.folderInputWrapper {
  display: flex;
  gap: 0.5rem;
  width: 100%;
  flex-wrap: wrap;
}

.folderInput {
  flex: 1;
  min-width: 150px; /* Minimum width before wrapping */
  padding: 0.75rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 0.9rem;
  background-color: #f8f8f8;
  cursor: default;
  width: 100%;
  box-sizing: border-box;
  color: #333;
}

.folderButton {
  margin-left: 10px;
  padding: 8px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s;
  white-space: nowrap;
  display: flex;
  align-items: center;
  justify-content: center;
}

.folderButton:hover {
  background-color: #0056b3;
}

.folderIcon {
  width: 20px;
  height: 20px;
  fill: white;
}

.renderOptionInput {
  width: 100%;
  padding: 8px;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
  transition: border-color 0.2s;
  color: #333;
  margin-top: 0; /* Ensure consistent alignment */
  align-self: stretch; /* Ensure inputs stretch to match their container */
  box-sizing: border-box;
}

.renderOptionInput:focus {
  border-color: #007bff;
  outline: none;
  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.1);
}

.renderOptionInput:invalid {
  border-color: #dc3545;
}

.renderOptionSelect {
  width: 100%;
  padding: 8px;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: white;
  cursor: pointer;
  box-sizing: border-box;
  margin-top: 0; /* Ensure consistent alignment */
  align-self: stretch; /* Ensure inputs stretch to match their container */
  box-sizing: border-box;
}

.renderOptionColor {
  width: 100%;
  height: 40px;
  padding: 0;
  border: 1px solid #ddd;
  border-radius: 4px;
  cursor: pointer;
  box-sizing: border-box;
}

/* Adjust checkbox layout */
.renderOptionCheckboxLabel {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  user-select: none;
  padding: 0.5rem 0;
  color: #333;
}

.renderOptionCheckbox {
  width: 18px;
  height: 18px;
  margin: 0;
  flex-shrink: 0;
}

/* Make render button responsive */
.renderButton {
  margin: 1rem 0 0 0; /* Adjust margin to align within the box */
  align-self: flex-start; /* Align button to the left */
  padding: 1rem 3rem;
  font-size: 1.25rem;
  font-weight: 500;
  color: white;
  background-color: #28a745;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  width: auto;
  max-width: 100%;
  white-space: nowrap;
}

.renderButton:hover {
  background-color: #218838;
  transform: translateY(-1px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.renderButton:active {
  transform: translateY(0);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.renderButton:disabled {
  background-color: #6c757d;
  cursor: not-allowed;
  transform: none;
}

.errorContainer {
  color: red; /* Text color for the error */
  background-color: #ffeeee; /* Light red background for visibility */
  border: 1px solid #cc0000; /* Red border */
  padding: 1rem;
  margin: 1rem 0;
  border-radius: 8px; /* Rounded edges */
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); /* Subtle shadow */
  word-wrap: break-word; /* Ensure long text wraps properly */
  width: 100%;
  max-width: 800px;
  margin: 1rem auto;
  padding: 1rem;
  word-break: break-word;
  overflow-wrap: break-word;
  padding-top: 0.5rem; /* Decrease padding above text */
  position: relative; /* For positioning the close button */
  white-space: pre-wrap; /* Ensure text wraps onto the next line */
}

.errorPre {
  white-space: pre-wrap; /* Ensure text wraps onto the next line */
  word-wrap: break-word; /* Break long words onto the next line */
  overflow-wrap: break-word; /* Ensure text wraps onto the next line */
}

/* Style for the close button */
.closeButton {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  background: none;
  border: none;
  font-size: 1rem;
  cursor: pointer;
}

/* Add media queries for smaller screens */
@media (max-width: 480px) {
  .renderOptionsSection {
    padding: 0.75rem;
  }

  .renderOptionsGrid {
    grid-template-columns: 1fr;
  }

  .folderInputWrapper {
    flex-direction: column;
  }

  .folderButton {
    width: 100%;
  }

  .renderButton {
    width: 100%;
    padding: 1rem;
  }
}

.rendersSection {
  width: 100%; /* Make it take up the full width */
  max-width: 90%; /* Match render options box */
  margin: 0 auto; /* Center the box horizontally */
  margin-top: 20px; /* Match spacing */
  padding: 20px; /* Ensure padding is visible on all sides */
  background-color: #f9f9f9;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
}

.renderItem {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding: 1rem;
  margin-bottom: 1rem;
  background: #f9f9f9;
  border-radius: 8px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  color: black; /* Ensure text is black */
  border: 1px solid black; /* Add black border */
}

.renderItem div {
  margin-bottom: 0.5rem;
  color: black; /* Ensure text is black */
}

.renderItem button {
  padding: 0.5rem 1rem;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.renderItem button:hover {
  background-color: #0056b3;
}

.renderItem button + button {
  margin-left: 0.5rem;
}

.rendersSection h2 {
  color: black; /* Ensure header text is black */
  margin-top: 0; /* Decrease padding above text */
}

.horizontal {
  flex-direction: row;
  justify-content: center; /* Center items horizontally */
}

.vertical {
  flex-direction: column;
  align-items: center;
}

.imageTimeline {
  display: flex;
  gap: 10px;
  padding: 10px;
  background-color: #f9f9f9;
  border: 1px solid #ddd;
  border-radius: 8px;
  justify-content: center; /* Center horizontally within the container */
  align-items: center; /* Center vertically */
  width: 100%; /* Ensure the timeline spans the full width of the container */
  overflow-x: auto;
}

.imageItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 10px;
  background-color: white;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  transition: box-shadow 0.2s;
}

.imageItem:hover {
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
}

.thumbnailWrapper {
  width: 150px;
  height: 150px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #f0f0f0;
  border: 1px solid #ccc;
  border-radius: 4px;
  overflow: hidden;
  position: relative;
}

.thumbnail {
  width: 100%;
  height: 100%;
  object-fit: contain;
  transition: none; 
}

.placeholder {
  width: 100%;
  height: 100%;
  background-color: #cccccc; /* Grey placeholder */
}


.imageOptions {
  flex-grow: 1;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.imageOptions label {
  font-size: 0.9rem;
  color: #333;
}

#imageTimelineBox {
  width: 100%;
  margin: 0;
  display: flex;
  flex-direction: column;
  align-items: flex-start; /* Align to the left */
  padding: 0.5rem 0; /* Adjust padding for compact layout */
  background-color: #f9f9f9;
  border: 1px solid #ddd;
  border-radius: 8px;
  box-sizing: border-box;
}

#imageTimelineContent {
  display: flex;
  gap: 10px;
  width: 100%; /* Ensure the content spans the full width */
  overflow-x: auto; /* Allow horizontal scrolling if needed */
  justify-content: flex-start; /* Align items to the left */
  align-items: center;
  padding: 0.5rem 0; /* Adjust padding for a clean look */
}

#imageTimelineContent p {
  color: black; /* Ensure text is black */
}

.resetButton {
  padding: 0.5rem 1rem;
  background-color: #dc3545;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  height: 2.5rem; /* Match button height to align with text */
  display: flex;
  align-items: center; /* Vertically center button text */
  justify-content: center;
}

.resetButton:hover {
  background-color: #c82333;
}

.editableDropdown {
  position: relative;
  display: flex;
  align-items: center;
}

.editableDropdown input {
  flex: 1;
  padding-right: 40px; /* Add padding to avoid overlap with dropdown arrow */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.editableDropdown input:focus {
  white-space: normal;
  overflow: visible;
  text-overflow: clip;
}

.editableDropdown select {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 30px;
  opacity: 0;
  cursor: pointer;
}

.editableDropdown::after {
  content: '▼';
  position: absolute;
  right: 10px;
  pointer-events: none;
  color: black;
}

.editableDropdownFolder::after {
  content: '';
  position: absolute;
  right: 10px;
  pointer-events: none;
  color: black;
}

.editableDropdownFolder select {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 30px;
  opacity: 0;
  cursor: pointer;
}
.editableDropdownFolder {
  position: relative;
  display: flex;
  align-items: center;
}

.editableDropdownFolder input {
  flex: 1;
  padding-right: 40px; /* Add padding to avoid overlap with dropdown arrow */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.editableDropdownFolder input:focus {
  white-space: normal;
  overflow: visible;
  text-overflow: clip;
}

.openFolderButton {
  cursor: pointer;
}

.deleteLocalStorageButton {
  margin-left: 10px;
  padding: 8px 12px;
  font-size: 14px;
  color: #fff;
  background-color: #dc3545;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.deleteLocalStorageButton:hover {
  background-color: #c82333;
}

.startingAnimation {
  display: inline-block;
  animation: dots 1.5s steps(5, end) infinite;
}

@keyframes dots {
  0%, 20% {
    content: 'Starting';
  }
  40% {
    content: 'Starting.';
  }
  60% {
    content: 'Starting..';
  }
  80%, 100% {
    content: 'Starting...';
  }
}

.toggleErrorButton {
  margin-top: 10px;
  padding: 8px 12px;
  font-size: 14px;
  color: #fff;
  background-color: #007bff;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.toggleErrorButton:hover {
  background-color: #0056b3;
}

.openFileButton {
  padding: 0.5rem 1rem;
  background-color: #28a745;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.openFileButton:disabled {
  background-color: #ccc;
  cursor: not-allowed;
}

.openFileButton:hover:not(:disabled) {
  background-color: #218838;
}

.deleteFileButton {
  padding: 0.5rem 1rem;
  background-color: #dc3545;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.deleteFileButton:hover {
  background-color: #c82333;
}

.deleteFileButton:disabled {
  background-color: #6c757d !important; /* Grey color when disabled */
  cursor: not-allowed !important;
  opacity: 0.6;
}

.noImageText {
  font-size: 14px;
  color: #666;
  margin-top: 0.5rem;
  display: block;
}